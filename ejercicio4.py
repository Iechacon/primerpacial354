# -*- coding: utf-8 -*-
"""Ejercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-f4fxVm_0PxtxOY4kNAn-dWpUTjYJVTZ
"""

from google.colab import drive
drive.mount("/content/drive")
import pandas as pd

# Leer el archivo CSV
data = pd.read_csv('/content/drive/MyDrive/parcial1/nivelestres.csv')


from sklearn.preprocessing import OneHotEncoder

#a) Seleccionar las columnas categóricas
print("a) Usar OneHotEncoder")
categorical_features = ['gender']
onehot_encoder = OneHotEncoder(drop='first')
encoded_data = onehot_encoder.fit_transform(data[categorical_features])
encoded_df = pd.DataFrame(encoded_data.toarray(), columns=onehot_encoder.get_feature_names_out(categorical_features))
data = pd.concat([data, encoded_df], axis=1)

print("\nValores codificados con OneHotEncoder:")
print(encoded_df.head())


#b) Crear un LabelEconder
print("b) Usar LabelEncoder")
from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()
data['gender_encoded'] = label_encoder.fit_transform(data['gender'])

print("\nValores codificados con LabelEncoder:")
print(data[['gender', 'gender_encoded']].head())


#c)
print("\nc) Usar la discretización")
from sklearn.preprocessing import KBinsDiscretizer
columnas_a_discretizar = [
    'age', 'bmi', 'snoring rate', 'respiration rate', 'body temperature',
    'limb movement', 'blood oxygen', 'eye movement', 'sleeping hours', 'heart rate'
]

# Aplicar discretización con KBinsDiscretizer (5 categorías con igual rango)
discretizer = KBinsDiscretizer(n_bins=5, encode='ordinal', strategy='uniform')
data_filled = data.fillna(data.median(numeric_only=True))
data_discretized = data_filled.copy()
data_discretized[columnas_a_discretizar] = discretizer.fit_transform(data_filled[columnas_a_discretizar])

# Visualizar las primeras filas del DataFrame discretizado
print("Primeras filas del DataFrame con las columnas discretizadas:\n")
print(data_discretized.head())

#d)
print("\nd) Usar la normalización")
from sklearn.preprocessing import MinMaxScaler
import pandas as pd
# Definir las columnas a normalizar
columnas_a_normalizar = [
    'age', 'bmi', 'snoring rate', 'respiration rate', 'body temperature',
    'limb movement', 'blood oxygen', 'eye movement', 'sleeping hours', 'heart rate'
]

# Crear una copia del DataFrame para mantener los datos discretizados
data_normalized = data_filled.copy()

# Aplicar la normalización con MinMaxScaler
scaler = MinMaxScaler()  # Escalar al rango [0, 1]
data_normalized[columnas_a_normalizar] = scaler.fit_transform(data_filled[columnas_a_normalizar])

# Mostrar las primeras filas del DataFrame normalizado
print("Primeras filas del DataFrame con las columnas normalizadas:\n")
print(data_normalized.head())